/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app.view;

import app.App;
import app.database.Database;
import app.entity.AuthorEntity;
import app.entity.CategoryEntity;
import app.model.AuthorModel;
import app.model.CategoryModel;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Tom
 */
public class CategoryList extends javax.swing.JPanel {

	MenuBar fen;

	/**
	 * Creates new form CategoryList
	 *
	 * @param fen
	 */
	public CategoryList(MenuBar fen) {
		super();
		initComponents();
		this.fen = fen;
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jLabelAuthorName1 = new javax.swing.JLabel();
    jTextFieldCategorySearch = new javax.swing.JTextField();
    jButtonCategoryCreate = new javax.swing.JButton();
    jLabelCategoryCreate = new javax.swing.JLabel();
    jButtonSearchAthor = new javax.swing.JButton();
    jTextFieldCategoryCreate = new javax.swing.JTextField();
    jScrollPane1 = new javax.swing.JScrollPane();
    jTableCategoryList = new javax.swing.JTable();
    JLabelCreateAuthor = new javax.swing.JLabel();
    JLabelCreateAuthor1 = new javax.swing.JLabel();

    jLabelAuthorName1.setText("Nom de la catégorie");

    jTextFieldCategorySearch.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jTextFieldCategorySearchActionPerformed(evt);
      }
    });

    jButtonCategoryCreate.setText("Ajouter");
    jButtonCategoryCreate.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButtonCategoryCreateActionPerformed(evt);
      }
    });

    jLabelCategoryCreate.setText("Nom de la catégorie");

    jButtonSearchAthor.setText("Rechercher");
    jButtonSearchAthor.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButtonSearchAthorActionPerformed(evt);
      }
    });

    jTextFieldCategoryCreate.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jTextFieldCategoryCreateActionPerformed(evt);
      }
    });

    jTableCategoryList.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {
        {null}
      },
      new String [] {
        "Categorie"
      }
    ));
    jScrollPane1.setViewportView(jTableCategoryList);

    JLabelCreateAuthor.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    JLabelCreateAuthor.setText("Ajouter une catégorie");

    JLabelCreateAuthor1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    JLabelCreateAuthor1.setText("Rechercher une catégorie");

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGap(21, 21, 21)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(JLabelCreateAuthor1)
          .addComponent(JLabelCreateAuthor)
          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
            .addComponent(jTextFieldCategoryCreate, javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelCategoryCreate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
            .addComponent(jTextFieldCategorySearch, javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelAuthorName1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        .addGap(168, 168, 168)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jButtonSearchAthor)
          .addComponent(jButtonCategoryCreate))
        .addContainerGap(87, Short.MAX_VALUE))
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jScrollPane1)
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGap(19, 19, 19)
        .addComponent(JLabelCreateAuthor)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(jLabelCategoryCreate)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jTextFieldCategoryCreate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jButtonCategoryCreate))
        .addGap(28, 28, 28)
        .addComponent(JLabelCreateAuthor1)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jLabelAuthorName1)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jTextFieldCategorySearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jButtonSearchAthor))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap())
    );
  }// </editor-fold>//GEN-END:initComponents

  private void jTextFieldCategorySearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCategorySearchActionPerformed
		// TODO add your handling code here:
  }//GEN-LAST:event_jTextFieldCategorySearchActionPerformed

  private void jButtonCategoryCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCategoryCreateActionPerformed
		Database db = App.getDb();

		String label;
		CategoryModel createCategory = new CategoryModel(db);

		label = jTextFieldCategoryCreate.getText().trim();

		if (label.equalsIgnoreCase("")) {
			// cas où les champs sont vides
			JOptionPane.showMessageDialog(fen, "Veuillez remplir le champ proposé");
		} else if (label.length() >= 1) {
			createCategory.createCategory(label);
		}
  }//GEN-LAST:event_jButtonCategoryCreateActionPerformed

  private void jButtonSearchAthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchAthorActionPerformed
		Database db = App.getDb();

		String label;
		CategoryModel searchLabel = new CategoryModel(db);
		ArrayList<CategoryEntity> categories = new ArrayList<>();

		// vide le JTable à chaque recherche avant affichage résultat
		DefaultTableModel tableModel = (DefaultTableModel) jTableCategoryList.getModel();
		while (tableModel.getRowCount() > 0) {
			tableModel.removeRow(0);
		}

		// récupération données
		label = jTextFieldCategorySearch.getText().trim();

		if (label.equalsIgnoreCase("")) {
			// cas où les champs sont vides
			JOptionPane.showMessageDialog(fen, "Veuillez remplir le champ proposé");
		} else if (label.length() >= 1) {

			categories = searchLabel.searchLabel(label);

			if (categories.isEmpty()) {
				JOptionPane.showMessageDialog(fen, "Aucune categorie correspondante");
			}

		}
		if (categories.isEmpty()) {
			JOptionPane.showMessageDialog(fen, "Aucune categorie correspondante");
		}

		for (int i = 0; i < categories.size(); i++) {
			String nom = categories.get(i).getName();
	
			Object[] data = {nom};
			tableModel.addRow(data);
		}
  }//GEN-LAST:event_jButtonSearchAthorActionPerformed

  private void jTextFieldCategoryCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCategoryCreateActionPerformed
		// TODO add your handling code here:
  }//GEN-LAST:event_jTextFieldCategoryCreateActionPerformed


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JLabel JLabelCreateAuthor;
  private javax.swing.JLabel JLabelCreateAuthor1;
  private javax.swing.JButton jButtonCategoryCreate;
  private javax.swing.JButton jButtonSearchAthor;
  private javax.swing.JLabel jLabelAuthorName1;
  private javax.swing.JLabel jLabelCategoryCreate;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JTable jTableCategoryList;
  private javax.swing.JTextField jTextFieldCategoryCreate;
  private javax.swing.JTextField jTextFieldCategorySearch;
  // End of variables declaration//GEN-END:variables
}
