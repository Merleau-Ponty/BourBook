package app.model;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import app.database.Database;
import app.entity.AuthorEntity;
import app.entity.CategoryEntity;
import java.sql.PreparedStatement;

public class CategoryModel extends Model{

	public CategoryModel(Database db) {
		super(db);
		// TODO Auto-generated constructor stub
	}
	

	public ArrayList<CategoryEntity> lister(){
		ArrayList<CategoryEntity> list = new ArrayList();
		try {
			Statement statement = db.getConnection().createStatement();	
			
			String req = "Select * from CATEGORY ;";
			
			ResultSet res = statement.executeQuery(req);
			
			while (res.next()) {
				list.add(new CategoryEntity(res.getInt("ID"), res.getString("LABEL") ) );
			} 
					
		}
		catch (SQLException e){
			e.printStackTrace();
		}
		
		return list;
	}
	
	/**
	 * affiche le nom de chaque categorie existante
	 * @return ArrayList de STRING
	 */
	public ArrayList<String> nomCategory(){
		ArrayList<String> nomCateg = new ArrayList();
		try {
			Statement statement = db.getConnection().createStatement();	
			
			String req = "Select LABEL from CATEGORY ;";
			
			ResultSet res = statement.executeQuery(req);
			
			while (res.next()) {
				nomCateg.add(res.getString("LABEL") );
			} 
					
		}
		catch (SQLException e){
			e.printStackTrace();
		}
		
		return nomCateg;
	}
	
	/**
	 * retourne le ou les auteurs comprenant la lettre mentionnée en paramètre
	 * @param name
	 * @return ArrayList de Book
	 */
	public ArrayList<CategoryEntity> searchLabel(String name) {
		ArrayList<CategoryEntity> liste = new ArrayList<CategoryEntity>();

		try {
			Statement statement = db.getConnection().createStatement();

			String req = "Select LABEL from CATEGORY where LABEL like '%" + name + "%' ORDER BY LABEL;";

			ResultSet res = statement.executeQuery(req);

			while (res.next()) {
				liste.add(new CategoryEntity(res.getString("LABEL")));
			}

		} catch (SQLException e) {
			e.printStackTrace();
		}

		return liste;

	}

	/**
	 * Ajoute une categorie dans la base de données
	 * @param label
	 * @return
	 */
	public CategoryEntity createCategory(String label) {
		CategoryEntity newCategory = null;
		String request = "insert into CATEGORY(LABEL) values (?)";
		System.out.println(request);
		try {
			PreparedStatement preparedStatement = db.getConnection().prepareStatement(request, Statement.RETURN_GENERATED_KEYS);
			preparedStatement.setString(1, label);
			preparedStatement.executeUpdate();
			ResultSet tableKeys = preparedStatement.getGeneratedKeys();
			tableKeys.next();
			int autoGeneratedID = tableKeys.getInt(1);
			newCategory = new CategoryEntity(autoGeneratedID, label);
			System.out.println(newCategory);
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return newCategory;
	}
	
	

}
